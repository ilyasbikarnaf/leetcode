/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    if (!list1 && !list2) return null

    if (!list1) return list2 
    else if (!list2) return list1

    let merged = new ListNode()
    let current = merged
    let l1 = list1
    let l2 = list2
    while(l1 && l2) {


        if (l1.val > l2.val) {
            current.next = l2
            l2 = l2.next
        } else {
            current.next = l1
            l1 = l1.next
        }
        current = current.next
    }

    while(l1) {
        current.next = l1
        current = current.next
        l1 = l1.next
    }


    while(l2) {
        current.next = l2
        current = current.next
        l2 = l2.next
    }
    return merged.next
};
